<?xml version="1.0"?>
<!--

    Copyright 2008 Marvin Herman Froeder
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.socialcomputing.jmi.jmi-server</groupId>
    <artifactId>jmi-server-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>jmi-server</artifactId>
  <packaging>war</packaging>
  <name>Just Map It! - Server</name>
  <url>http://www.social-computing.com/</url>

  <repositories>
    <!-- JBoss public repository -->
    <repository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Maven Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>
    
    <!-- Oracle (SUN) official maven repository -->
    <repository>
        <id>maven2-repository.dev.java.net</id>
        <name>Java.net Repository for Maven</name>
        <url>http://download.java.net/maven/2/</url>
        <layout>default</layout>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Maven Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
  
  <dependencies>
    <!-- Build dependencies -->    
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>3.6.8.Final</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
      <version>1.0.1.Final</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-commons-annotations</artifactId>
      <version>3.2.0.Final</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-c3p0</artifactId>
      <version>3.6.8.Final</version>
    </dependency>
    
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-core</artifactId>
      <version>2.3.2</version>
    </dependency>
	
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.0</version>
    </dependency>
    
	<dependency>
		<groupId>commons-lang</groupId>
		<artifactId>commons-lang</artifactId>
		<version>2.6</version>
	</dependency>
            
    <!--  Http client-->
	<dependency>
	    <groupId>commons-httpclient</groupId>
	    <artifactId>commons-httpclient</artifactId>
	    <version>3.1</version>
	</dependency>
	
	<!--  JSON simple -->
	<dependency>
	    <groupId>com.googlecode.json-simple</groupId>
	    <artifactId>json-simple</artifactId>
	    <version>1.1</version>
	</dependency>
     
    <!-- Sun Jax-RS implementation -->
    <!--dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-guice</artifactId>
      <version>1.5</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-servlet</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>2.0</version>
    </dependency-->
	
	<!--  JSON jersey -->
    <!--  Jersey dependencies -->
	<dependency>
    	<groupId>com.sun.jersey</groupId>
    	<artifactId>jersey-server</artifactId>
    	<version>${jersey.version}</version>
	</dependency>
	<dependency>
    	<groupId>com.sun.jersey</groupId>
    	<artifactId>jersey-servlet</artifactId>
    	<version>${jersey.version}</version>
	</dependency>    
    <dependency>
	  <groupId>com.sun.jersey</groupId>
	  <artifactId>jersey-json</artifactId>
    	<version>${jersey.version}</version>
    </dependency>
	<dependency>
     <groupId>com.sun.jersey.contribs</groupId>
     <artifactId>jersey-multipart</artifactId>
    	<version>${jersey.version}</version>
	</dependency>    
    
    <!-- Solr client library (used by the solr connector) -->
    <dependency>
      <artifactId>solr-solrj</artifactId>
      <groupId>org.apache.solr</groupId>
      <version>1.4.1</version>
    </dependency>

    <!-- Check if it is really needed or if there is a mistake in an hibernate property or with annotations -->
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.14.0-GA</version>
    </dependency>

    <dependency>
      <groupId>com.socialcomputing.jmi.jmi-server</groupId>
      <artifactId>jmi-server-connector-utils</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    
    <dependency>
      <groupId>com.socialcomputing.jmi.jmi-client</groupId>
      <artifactId>jmi-canvas</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>jar</type>
      <scope>runtime</scope>      
    </dependency>
    <!--
    <dependency>
      <groupId>com.socialcomputing.jmi.jmi</groupId>
      <artifactId>jmi-flex</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>swf</type>
      <scope>runtime</scope>      
    </dependency>

    <dependency>
      <groupId>com.socialcomputing.jmi.jmi</groupId>
      <artifactId>jmi-flex-demo</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>swf</type>
      <scope>runtime</scope>      
    </dependency>
    -->
	
    <!-- Compilation only dependencies -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.sun</groupId>
      <artifactId>plugin</artifactId>
      <version>1.6</version>
      <scope>system</scope>
      <systemPath>${java.home}/lib/plugin.jar</systemPath>
    </dependency>

    <!-- Tests dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
	  <artifactId>jetty-webapp</artifactId>
	  <version>${jetty.version}</version>
	  <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>8.0.0.M2</version>
	  <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>8.0.0.M2</version>
	  <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>1.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
	  <groupId>mysql</groupId>
	  <artifactId>mysql-connector-java</artifactId>
	  <version>5.1.15</version>
	  <scope>test</scope>
	</dependency>
  </dependencies>

  <!-- Build properties -->
  <build>
    <!-- Configuration of a ressource directory to enable filtering 
         Used here to replace applet.version with the property defined here -->
    <resources>
      <!-- Needed because we override default rule -->
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <!-- Maven complier configuration -->
      <plugin>
   	    <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <!-- Set java project compliance  -->
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <!-- récupération de l'application flex -->
      <!--
      <plugin>
        <groupId>org.sonatype.flexmojos</groupId>
        <artifactId>flexmojos-maven-plugin</artifactId>
        <version>${flexmojos.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>copy-flex-resources</goal>
            </goals>
            <configuration>
                <webappDirectory>${project.build.directory}/${project.build.finalName}/client/flex</webappDirectory> 
            </configuration>
          </execution>
        </executions>
      </plugin>
      -->
    
      <!-- Creation of the applet jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.3.1</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/client/applet/*</include>
              </includes>
              <finalName>WPSApplet${applet.version}</finalName>
              <!-- Hack :  
                   Move the generated applet so that it also work with in eclipse
                   with the m2eclipse plugin -->
              <outputDirectory>src/main/webapp/client/applet</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Filtering of the server side applet jsp file --> 
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/applet-resources</directory>
              <filtering>true</filtering>
            </resource>
          </webResources>
          <overlays>
            <overlay>
              <groupId>com.socialcomputing.jmi.jmi-client</groupId>
              <artifactId>jmi-canvas</artifactId>
              <type>jar</type>
              <targetPath>/</targetPath>
              <!--
                <includes>
                  <include>build/**</include>
                </includes>
              -->
            </overlay>
          </overlays>          
        </configuration>

      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.1</version>
        <configuration>
            <url>http://dev.centreressources.com:8280/manager/html</url>
            <username>social</username>
            <password>computing</password>
        </configuration>
      </plugin>

    </plugins>

    <!-- Overrule the default pom source directory to match
         our generated sources so the compiler will pick them up -->
    <!-- <sourceDirectory>target/filtered-sources/java</sourceDirectory> -->

    <finalName>jmi-server</finalName>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>
    									org.sonatype.flexmojos
    								</groupId>
    								<artifactId>
    									flexmojos-maven-plugin
    								</artifactId>
    								<versionRange>
    									[4.0-SNAPSHOT,)
    								</versionRange>
    								<goals>
    									<goal>copy-flex-resources</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>
</project>
